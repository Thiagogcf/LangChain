import os
import sys
from dotenv import load_dotenv
from langchain_google_genai import ChatGoogleGenerativeAI
from search import similarity_search

load_dotenv()

def validate_chat_environment():
    required_vars = ["GOOGLE_API_KEY", "POSTGRES_USER", "POSTGRES_PASSWORD", "POSTGRES_DB"]
    missing_vars = []

    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)

    if missing_vars:
        print(f"‚ùå Erro: As seguintes vari√°veis de ambiente n√£o foram encontradas no arquivo .env:")
        for var in missing_vars:
            print(f"   - {var}")
        print("\nVerifique o arquivo .env e adicione as vari√°veis necess√°rias.")
        return False

    return True

def print_welcome():
    print("=" * 60)
    print("ü§ñ CHAT COM SEU DOCUMENTO PDF")
    print("=" * 60)
    print("üí° Fa√ßa perguntas sobre o conte√∫do do seu documento.")
    print("üí° Digite 'sair' para encerrar o chat.")
    print("=" * 60)

def format_response(response_content):
    return f"\nüí¨ RESPOSTA: {response_content}\n" + "-" * 60

def main():
    try:
        if not validate_chat_environment():
            sys.exit(1)

        print("üîÑ Inicializando chat...")
        google_api_key = os.getenv("GOOGLE_API_KEY")

        try:
            llm = ChatGoogleGenerativeAI(
                model="models/gemini-2.5-flash-lite",
                google_api_key=google_api_key
            )
        except Exception as e:
            print(f"‚ùå Erro ao configurar o modelo: {e}")
            print("Verifique sua GOOGLE_API_KEY e conex√£o com a internet.")
            sys.exit(1)

        print_welcome()

        while True:
            try:
                user_question = input("\n‚ùì Fa√ßa sua pergunta: ").strip()

                if user_question.lower() in ['sair', 'exit', 'quit']:
                    print("\nüëã Encerrando chat. At√© logo!")
                    break

                if not user_question:
                    print("‚ö†Ô∏è  Por favor, digite uma pergunta v√°lida.")
                    continue

                print("üîç Buscando informa√ß√µes relevantes...")

                search_results = similarity_search(user_question)

                if not search_results:
                    print("‚ùå N√£o foi poss√≠vel encontrar informa√ß√µes relevantes.")
                    print("Certifique-se de que a ingest√£o foi executada com sucesso.")
                    continue

                context = "\n".join([doc.page_content for doc, score in search_results])

                if not context.strip():
                    print("‚ö†Ô∏è  Contexto vazio encontrado. Tentando novamente...")
                    continue

                prompt = f"""CONTEXTO:
{context}

REGRAS:
- Responda somente com base no CONTEXTO.
- Se a informa√ß√£o n√£o estiver explicitamente no CONTEXTO, responda:
  "N√£o tenho informa√ß√µes necess√°rias para responder sua pergunta."
- Nunca invente ou use conhecimento externo.
- Nunca produza opini√µes ou interpreta√ß√µes al√©m do que est√° escrito.

EXEMPLOS DE PERGUNTAS FORA DO CONTEXTO:
Pergunta: "Qual √© a capital da Fran√ßa?"
Resposta: "N√£o tenho informa√ß√µes necess√°rias para responder sua pergunta."

Pergunta: "Quantos clientes temos em 2024?"
Resposta: "N√£o tenho informa√ß√µes necess√°rias para responder sua pergunta."

Pergunta: "Voc√™ acha isso bom ou ruim?"
Resposta: "N√£o tenho informa√ß√µes necess√°rias para responder sua pergunta."

PERGUNTA DO USU√ÅRIO:
{user_question}

RESPONDA A "PERGUNTA DO USU√ÅRIO" """

                print("ü§î Processando sua pergunta...")

                response = llm.invoke(prompt)

                print(format_response(response.content))

            except KeyboardInterrupt:
                print("\n\nüëã Chat interrompido. At√© logo!")
                break

            except Exception as e:
                print(f"\n‚ùå Erro ao processar pergunta: {e}")
                print("Tente novamente ou digite 'sair' para encerrar.")
                continue

    except Exception as e:
        print(f"‚ùå Erro fatal no chat: {e}")
        print("Verifique suas configura√ß√µes e tente novamente.")
        sys.exit(1)

if __name__ == "__main__":
    main()
